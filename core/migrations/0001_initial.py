# Generated by Django 5.2 on 2025-04-22 06:49

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('mobile', models.CharField(max_length=15, unique=True)),
                ('role', models.CharField(choices=[('patient', 'Patient'), ('staff', 'Staff'), ('admin', 'Admin')], max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PatientProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(max_length=10)),
                ('contact', models.CharField(max_length=15)),
                ('is_differently_abled', models.BooleanField(default=False)),
                ('aadhaar_number', models.CharField(max_length=20, unique=True)),
                ('address', models.TextField()),
                ('admission_number', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StaffProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(max_length=10)),
                ('role', models.CharField(choices=[('staff', 'Staff'), ('doctor', 'Doctor')], max_length=10)),
                ('qualification', models.CharField(max_length=100)),
                ('contact', models.CharField(max_length=15)),
                ('address', models.TextField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OutpatientRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visit_date', models.DateField()),
                ('symptoms', models.TextField()),
                ('diagnosis', models.TextField()),
                ('prescription', models.TextField()),
                ('next_visit_date', models.DateField(blank=True, null=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.patientprofile')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.staffprofile')),
            ],
        ),
        migrations.CreateModel(
            name='InpatientRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bed_number', models.IntegerField()),
                ('case_type', models.CharField(max_length=100)),
                ('admitted_date', models.DateField()),
                ('discharged_date', models.DateField(blank=True, null=True)),
                ('treatment_plan', models.TextField()),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.patientprofile')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.staffprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_date', models.DateField()),
                ('symptom_or_disease', models.CharField(max_length=255)),
                ('admission_number', models.CharField(max_length=20, unique=True)),
                ('token_number', models.IntegerField()),
                ('token_reset_date', models.DateTimeField(blank=True, null=True)),
                ('is_priority', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('Booked', 'Booked'), ('Completed', 'Completed')], default='Booked', max_length=10)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.patientprofile')),
            ],
            options={
                'unique_together': {('admission_number', 'appointment_date')},
            },
        ),
    ]
